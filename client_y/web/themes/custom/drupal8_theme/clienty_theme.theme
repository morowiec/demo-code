<?php

/**
 * @file
 * Functions to support theming.
 */

use Drupal\block\Entity\Block;
use Drupal\Core\Template\Attribute;
use Drupal\drupal8_faq\Plugin\Field\FieldFormatter\EntityAccordionFaqTabFormatter;


/**
 * Implements hook_preprocess_HOOK() for page templates.
 */
function drupal8_theme_preprocess_page(&$variables) {
  $variables['content_header_attributes'] = [
    'class' => [
      'content-header',
      'col-12',
    ],
    'id' => ['content_header'],
  ];
  if (isset($variables['node']) && !empty($variables['node'])
    && ($variables['node']->getType() == 'drupal8_education_article'
      || $variables['node']->getType() == 'drupal8_education_lessons')
  ) {
    $variables['sidebar_first_attributes']['class'] = [
      'sidebar',
      'order-first',
      'col-md-6',
      'col-lg-3',
    ];
    $variables['content_header_attributes']['class'][] = 'col-lg-9';
  }
  $variables['content_header_attributes'] = new Attribute($variables['content_header_attributes']);

  $content_width = 'col';
  $variables['content_attributes'] = [
    'class' => [
      'main-content',
      $content_width,
      'p-0',
    ],
    'id' => ['content'],
    'role' => ['main'],
  ];
  $has_tabs_on_gray_bar = !empty($variables['page']['content_header']['tabs_content_header']);
  $has_tabs_on_content = !empty($variables['page']['content']['tabs']);
  if ($has_tabs_on_gray_bar && $has_tabs_on_content) {
    unset($variables['page']['content']['tabs']);
  }
}

/**
 * Implements hook_theme_suggestions_block_alter().
 */
function drupal8_theme_theme_suggestions_block_alter(array &$suggestions, array $variables) {
  if (isset($variables['elements']['content']['#block_content'])) {
    array_splice($suggestions, 1, 0, 'block__block_content__' . $variables['elements']['content']['#block_content']->bundle());
  }
}

/**
 * Implements hook_theme_suggestions_HOOK_alter().
 */
function drupal8_theme_theme_suggestions_page_alter(array &$suggestions, array $variables) {
  $node = \Drupal::request()->get('node_preview') ?: \Drupal::request()
    ->get('node');
  if (!empty($node)) {
    $suggestions[] = 'page__' . $node->getType();
  }
}

/**
 * Implements hook_preprocess_HOOK().
 *
 * Pass block region value to content so this can be used in
 * MYTHEME_theme_suggestions_menu_alter.
 */
function drupal8_theme_preprocess_block(&$variables) {
  if (isset($variables['elements']['#id'])) {
    $region = Block::load($variables['elements']['#id'])->getRegion();
    $variables['content']['#attributes']['region'] = $region;
  }

  _drupal8_theme_preprocess_block_attach_block_content($variables);
  _drupal8_theme_preprocess_block_attach_block_view($variables);
  _drupal8_theme_preprocess_block_attach_block_custom($variables);
  _drupal8_theme_preprocess_block_attach_block_menu($variables);
}

/**
 * Implements hook_theme_suggestions_HOOK_alter().
 *
 * Provide region based menu suggestions.
 */
function drupal8_theme_theme_suggestions_menu_alter(&$suggestions, array $variables) {
  if (isset($variables['attributes']['region'])) {
    $suggestions[] = 'menu__' . $variables['menu_name'] . '__' . $variables['attributes']['region'];
  }
}

/**
 * Implements hook_preprocess_HOOK() for views templates.
 */
function drupal8_theme_preprocess_views_view(&$variables) {
  /* @var $view \Drupal\views\ViewExecutable */
  $view = $variables['view'];
  $view_id = $view->id();

  if ($view_id == 'drupal8_news_news' && $view->current_display == 'block_homepage') {
    $variables['more']['#options']['attributes']['class'] = [
      'btn',
      'btn-icon-arrow-right',
      'btn-icon-color-green',
    ];
  }

  if ($view->current_display === 'block_upcoming') {
    $variables['#attached']['library'][] = 'drupal8_education/drupal8_education.upcoming_slick';
  }
}

/**
 * Implements hook_preprocess_menu() for menu.html.twig.
 */
function drupal8_theme_preprocess_menu(&$variables, $hook) {
  if ($hook == 'menu') {
    $current_path = \Drupal::request()->getRequestUri();
    foreach ($variables['items'] as &$item) {
      if ($item['in_active_trail']) {
        if ($item['url']->toString() == $current_path) {
          $item['is_active'] = TRUE;
        }
        elseif (count($item['below'])) {
          _drupal8_theme_menu_process_submenu($item['below'], $current_path);
        }
        else {
          $item['is_active'] = FALSE;
        }
      }
    }
  }
}

/**
 * Set active and active-trail class for sub-menus recursively.
 */
function _drupal8_theme_menu_process_submenu(&$submenu, $current_path) {
  foreach ($submenu as &$item) {
    if ($item['in_active_trail']) {
      if ($item['url']->toString() == $current_path) {
        $item['is_active'] = TRUE;
      }
      elseif (count($item['below'])) {
        _drupal8_theme_menu_process_submenu($item['below'], $current_path);
      }
      else {
        $item['is_active'] = FALSE;
      }
    }
  }
}

/**
 * Implements hook_theme_suggestions_HOOK_alter() for form templates.
 */
function drupal8_theme_theme_suggestions_form_alter(array &$suggestions, array $variables) {
  if ($variables['element']['#form_id'] == 'drupal8_simple_search_form') {
    $suggestions[] = 'form__drupal8_simple_search_form';
  }
}
