<?php

/**
 * @file
 * Main module for Drupal8 v1.0.
 *
 * @package Drupal\drupal8_core
 */

use Drupal\Core\Breadcrumb\Breadcrumb;
use Drupal\Core\Entity\Display\EntityViewDisplayInterface;
use Drupal\Core\Entity\EntityInterface;
use Drupal\Core\Form\FormStateInterface;
use Drupal\Core\Routing\RouteMatchInterface;

/**
 * Load custom_token.tokens.inc from custom_token module.
 */
module_load_include('inc', 'drupal8_core', 'drupal8_core.tokens');

/**
 * Implements hook_theme().
 */
function drupal8_core_theme() {
  return [
    'drupal8_like_dislike' => [
      'variables' => [
        'entity_id' => NULL,
        'entity_type' => NULL,
        'icons' => [],
        'title' => NULL,
      ],
      'template' => 'block--like-dislike',
    ],
    'drupal8_social_media' => [
      'variables' => [
        'items' => [],
      ],
      'template' => 'block--social-media',
    ],
    'drupal8_social_media_element' => [
      'variables' => [
        'icon' => '',
        'title' => '',
      ],
      'template' => 'block--social-media-element',
    ],
    'drupal8_contact_bar' => [
      'variables' => [
        'items' => [],
      ],
      'template' => 'block--contact-bar',
    ],
    'drupal8_contact_bar_element' => [
      'variables' => [
        'icon' => '',
        'title' => '',
      ],
      'template' => 'block--contact-bar-element',
    ],
    'drupal8_copyright_footer' => [
      'variables' => [
        'items' => [],
        'year' => NULL,
      ],
      'template' => 'block--copyright-footer',
    ],
    'drupal8_brands_bar' => [
      'variables' => [
        'items' => [],
      ],
      'template' => 'block--brands-bar',
    ],
    'drupal8_intro_gray_bar' => [
      'variables' => [
        'content' => [],
      ],
      'template' => 'block--intro-gray-bar',
    ],
    'drupal8_brands_bar_element' => [
      'variables' => [
        'icon' => '',
        'title' => '',
      ],
      'template' => 'block--brands-bar-element',
    ],
    'drupal8_websites_switch' => [
      'variables' => [
        'items' => [],
      ],
      'template' => 'block--website-switch',
    ],
  ];
}

/**
 * Implements hook_layout_alter().
 */
function drupal8_core_layout_alter(&$definitions) {
  // Disable default layouts.
  /** @var \Drupal\Core\Layout\LayoutDefinition $definition */
  foreach ($definitions as $key => $definition) {
    // Only custom layouts.
    if (strpos($definition->getProvider(), 'drupal8_') !== 0) {
      unset($definitions[$key]);
    }
  }

  // Override default layouts.
  $definitions['layout_onecol'] = $definitions['layout_drupal8_onecol'];
  $definitions['layout_twocol'] = $definitions['layout_drupal8_twocol'];
  unset($definitions['layout_drupal8_onecol']);
  unset($definitions['layout_drupal8_twocol']);
}

/**
 * Implements hook_entity_view_alter().
 */
function drupal8_core_entity_view_alter(array &$build, EntityInterface $entity, EntityViewDisplayInterface $display) {
  switch ($entity->bundle()) {
    case 'drupal8_core_block_atomic_mobile':
      $config = \Drupal::config('drupal8_core.settings');
      if (empty($config)) {
        continue;
      }
      $build['#download_mobile_app']['#google_play_url'] = $config->get('download_mobile_app.google_play_url');
      $build['#download_mobile_app']['#app_store_play'] = $config->get('download_mobile_app.app_store_play');
      $build['#download_mobile_app']['#open_new_window'] = $config->get('download_mobile_app.open_new_window');
  }
}

/**
 * Implements hook_system_breadcrumb_alter().
 */
function drupal8_core_system_breadcrumb_alter(Breadcrumb &$breadcrumb, RouteMatchInterface $route_match, array $context) {
  foreach ($breadcrumb->getLinks() as $key => &$item) {
    if (empty($item->getText())) {
      continue;
    }
    // Remove tags from breadcrumb.
    $item->setText(strip_tags($item->getText()));
  }
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function drupal8_core_form_node_drupal8_core_alert_edit_form_alter(&$form, FormStateInterface $form_state, $form_id) {
  // TODO: Add a new widget type for textarea (long text) with settings.
  $form['field_drupal8_title']['widget']['#after_build'][] = '_allowed_formats_remove_text_format';
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function drupal8_core_form_node_drupal8_core_alert_form_alter(&$form, FormStateInterface $form_state, $form_id) {
  // TODO: Add a new widget type for textarea (long text) with settings.
  $form['field_drupal8_title']['widget']['#after_build'][] = '_allowed_formats_remove_text_format';
}

/**
 * Implements hook_preprocess_menu().
 */
function drupal8_core_preprocess_menu(array &$variables) {
  if ($variables['attributes']['region'] == 'sidebar_first') {
    _drupal8_core_preprocess_link_in_sidebar($variables['items']);
  }
}

/**
 * Add 'show' variable to links, when parent link has active trail.
 */
function _drupal8_core_preprocess_link_in_sidebar(array &$items, bool $show = TRUE) {
  foreach ($items as &$item) {
    $item['show'] = $show;

    if (!empty($item['below'])) {
      _drupal8_core_preprocess_link_in_sidebar($item["below"], $item['in_active_trail']);
    }
  }
}

/**
 * Remove format select in ckeditor.
 *
 * @param array $form_element
 *   An associative array containing the structure of the current element.
 * @param \Drupal\Core\Form\FormStateInterface $form_state
 *   The current state of the form. In this context, it is used to accumulate
 *   information about which button was clicked when the form was submitted,
 *   as well as the sanitized \Drupal::request()->request data.
 *
 * @return array
 *   $form_element
 */
function _allowed_formats_remove_text_format(array $form_element, FormStateInterface $form_state) {
  if (isset($form_element[0]['format'])) {
    $form_element[0]["format"]["format"]["#value"] = 'simple_html';
    $form_element[0]["#format"] = 'simple_html';
    $form_element[0]["format"]["#attributes"]["class"][] = 'hidden';
  }

  return $form_element;
}
